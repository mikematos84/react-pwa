{"version":3,"sources":["components/AppInstall/index.js","components/Navigation/index.js","services/userAgent.js","services/hasMediaRecorder.js","services/browser.js","services/routerHelper.js","contexts/navigation/Context.js","contexts/navigation/withContextProvider.js","contexts/navigation/withContextConsumer.js","pages/Home/index.js","pages/NotFound/index.js","components/MediaRecorderCapture/index.js","pages/MediaRecorder/index.js","components/CameraInput/index.js","pages/DefaultCameraInput/index.js","pages/Sandbox/index.js","pages/VadTimeSlicing/index.js","App.js","serviceWorker.js","index.js"],"names":["Component","AppInstall","props","useState","deferredPrompt","setDeferredPrompt","showInstallPrompt","setShowInstallPrompt","useEffect","window","addEventListener","e","preventDefault","console","log","className","onClick","prompt","userChoice","then","choiceResult","outcome","Navigation","to","exact","userAgent","navigator","toLowerCase","vendor","toLocaleLowerCase","hasMediaRecorder","MediaRecorder","debug","toString","test","process","currentPage","location","pathname","substring","lastIndexOf","split","initialState","match","NavigationContext","React","createContext","withContextProvider","navigation","setNavigation","Provider","value","withContextConsumer","useContext","Fragment","MediaRecorderCapture","mediaRecorder","setMediaRecorder","isRecording","setIsRecording","recorderRef","useRef","playerRef","initializeMediaRecorder","chunks","ondataavailable","push","data","onstop","blob","Blob","type","url","URL","webkitURL","createObjectURL","setPlaybackPreview","createDownloadLink","onerror","error","link","href","download","linkContainer","document","getElementById","ReactDOM","render","state","start","a","stop","current","src","setRecordingStreamPreview","stream","srcObject","createMediaRecorder","Promise","resolve","reject","err","mediaDevices","getUserMedia","audio","video","facingMode","ref","autoPlay","playsInline","muted","controls","id","CameraInput","processFileInput","fileInput","files","accept","capture","DefaultCameraInput","useMediaDevices","JSON","stringify","VadTimeSlicing","voiceState","setVoiceState","voiceActivity","setVoiceActivity","setActivityData","_activityData","timeSlices","setTimeSlices","_timeSlices","saveJsonToFile","filename","axios","post","response","player","querySelector","_vad","onloadedmetadata","AudioContext","webkitAudioContext","audioContext","captureStream","options","fftSize","bufferLen","smoothingTimeConstant","minCaptureFreq","maxCaptureFreq","noiseCaptureDuration","minNoiseLevel","maxNoiseLevel","avgNoiseMultiplier","onVoiceStart","seconds","currentTime","prev","onVoiceStop","onUpdate","val","vad","disconnect","onplay","connect","onpause","onended","setTimeout","width","basename","fallback","path","component","Home","Sandbox","NotFound","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","origin","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.941e2982.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AppInstall = props => {\n\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\n  const [showInstallPrompt, setShowInstallPrompt] = useState(false);\n\n  useEffect(() => {\n\n    window.addEventListener('beforeinstallprompt', (e) => {\n      // Prevent the mini-infobar from appearing on mobile\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      setDeferredPrompt(e);\n      // Update UI notify the user they can install the PWA\n      setShowInstallPrompt(true);\n    });\n\n    window.addEventListener('appinstalled', (e) => {\n      console.log('a2hs installed');\n    });\n\n  }, []);\n\n  const installApp = () => {\n    // Hide the app provided install promotion\n    setShowInstallPrompt(false);\n    // Show the install prompt\n    deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    deferredPrompt.userChoice.then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the install prompt');\n      } else {\n        console.log('User dismissed the install prompt');\n      }\n    })\n  }\n\n  return (\n    showInstallPrompt &&\n    <div className=\"AppInstall\">\n      <div>Customer App Installer React PWA <button onClick={installApp}>Install</button></div>\n    </div>\n  );\n}\n\nexport const withAppInstall = Component => {\n  return () => (\n    <React.Fragment>\n      <AppInstall />\n      <Component />\n    </React.Fragment>\n  )\n}\n\nexport default AppInstall;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = props => {\n  return (\n    <ul className=\"navigation\">\n      <li><NavLink to=\"/\" exact>Home</NavLink></li>\n      <li><NavLink to=\"/default-camera-input\">Default Camera Input</NavLink></li>\n      <li><NavLink to=\"/media-recorder-capture\">MediaRecorder Capture</NavLink></li>\n      <li><NavLink to=\"/sandbox\">Sandbox</NavLink></li>\n      <li><NavLink to=\"/vad-time-slicing\">VAD Time Slicing</NavLink></li>\n    </ul>\n  )\n}\n\nexport default Navigation;","const userAgent = window.navigator.userAgent.toLowerCase();\nconst vendor = window.navigator.vendor.toLocaleLowerCase();\n\n// Detects if device is on iOS \nconst isIos = () => {\n  return /iphone|ipad|ipod/.test(userAgent);\n}\n\n// Detects if device is on Android\nconst isAndroid = () => {\n  return /android/.test(userAgent);\n}\n\n// Detects if browser is Safari\nconst isSafari = () => {\n  return /apple/.test(vendor);\n}\n\n// Detects if browser is Chrome\nconst isChrome = () => {\n  return /google/.test(vendor);\n}\n\n// Detects if device is in standalone mode\nconst isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);\n\nexport {\n  userAgent,\n  vendor,\n  isIos,\n  isAndroid,\n  isInStandaloneMode,\n  isSafari,\n  isChrome,\n}","// Detect if MediaRecorder is available\nconst hasMediaRecorder = () => {\n  return !(typeof MediaRecorder === \"undefined\");\n}\n\nexport { hasMediaRecorder }","import React from 'react';\nimport { userAgent, isIos, isSafari } from './userAgent';\nimport { hasMediaRecorder } from './hasMediaRecorder';\n\nconst debug = () => (\n  <table>\n    <tbody>\n      <tr><td>User Agent</td><td>{userAgent.toString()}</td></tr>\n      <tr><td>Is iOS</td><td>{isIos().toString()}</td></tr>\n      <tr><td>Is Safari</td><td>{isSafari().toString()}</td></tr>\n      <tr><td>Has MediaRecorder</td><td>{hasMediaRecorder().toString()}</td></tr>\n      <tr><td>Environment</td><td>{process.env.NODE_ENV}</td></tr>\n      <tr><td>Public URL</td><td>{process.env.PUBLIC_URL}</td></tr>\n    </tbody>\n  </table>\n)\n\nexport {\n  debug\n}","const currentPage = (location = {}) => {\n  const { pathname } = location;\n  if (!pathname) return;\n  return pathname.substring(pathname.lastIndexOf('/') + 1).split('?')[0];\n}\n\nconst getBreadCrumbs = (match = {}) => {\n  const { path } = match;\n  if (!path) return [];\n  return path.split('/').filter(x => x !== \"\" && !x.includes(':'));\n}\n\nexport {\n  currentPage,\n  getBreadCrumbs\n}","import React from 'react';\n\nconst initialState = {\n  location: {},\n  match: {}\n};\nconst NavigationContext = React.createContext(initialState);\n\nexport { NavigationContext, initialState };","import React, { useState } from 'react';\nimport { NavigationContext, initialState } from './Context';\n\nconst withContextProvider = (Component) => {\n  return props => {\n\n    const [navigation, setNavigation] = useState(initialState);\n\n    return (\n      <NavigationContext.Provider value={{ navigation, setNavigation }}>\n        <Component props={props} />\n      </NavigationContext.Provider>\n    )\n  }\n}\n\nexport default withContextProvider;\n","import React, { useContext, useEffect } from 'react';\nimport { NavigationContext } from './Context';\n\nconst withContextConsumer = (Component) => {\n  return props => {\n    const { setNavigation } = useContext(NavigationContext);\n\n    useEffect(() => {\n      const { location, match } = props;\n      setNavigation({ location, match });\n    }, []);\n\n    return (\n      <React.Fragment>\n        <Component props={props} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withContextConsumer;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Services\nimport { hasMediaRecorder } from '../../services/hasMediaRecorder';\n\n// Context\nimport withContextConsumer from '../../contexts/navigation/withContextConsumer';\n\nconst Home = props => {\n  return (\n    <React.Fragment>\n      <div>Determining best video capture method...</div>\n      {\n        hasMediaRecorder() ?\n          <Redirect to=\"/media-recorder-capture\" /> :\n          <Redirect to=\"/default-camera-input\" />\n      }\n    </React.Fragment>\n  )\n}\n\nexport default withContextConsumer(Home);","import React from 'react';\n\n// Context\nimport withContextConsumer from '../../contexts/navigation/withContextConsumer';\n\nconst NotFound = props => {\n  return (\n    <div className=\"wrapper content\">\n      <div>Not Found</div>\n    </div>\n  )\n}\n\nexport default withContextConsumer(NotFound);","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst MediaRecorderCapture = props => {\n  const [mediaRecorder, setMediaRecorder] = useState({});\n  const [isRecording, setIsRecording] = useState(false);\n  const recorderRef = useRef();\n  const playerRef = useRef();\n\n  /**\n   * Initialize the MediaRecorder on component mount\n   */\n  useEffect(() => {\n    initializeMediaRecorder();\n  }, [])\n\n  /**\n   * Upon MedaRecorder being set, monitor the following events\n   */\n  useEffect(() => {\n    let chunks = [];\n\n    mediaRecorder.ondataavailable = e => chunks.push(e.data)\n\n    mediaRecorder.onstop = e => {\n      let blob = new Blob(chunks, { type: 'video/mp4' });\n      chunks = [];\n      let url = (window.URL || window.webkitURL).createObjectURL(blob);\n      setPlaybackPreview(url);\n      createDownloadLink(url);\n    }\n\n    mediaRecorder.onerror = e => {\n      console.log('Error recording stream');\n      console.log(e.error);\n    }\n\n    console.log('MediaRecorder ready');\n  }, [mediaRecorder]);\n\n  const createDownloadLink = url => {\n    const link = <a href={url} download=\"Recording.mp4\">Download</a>;\n    const linkContainer = document.getElementById('download-link');\n    ReactDOM.render(link, linkContainer);\n  }\n\n  /**\n   * Helper function to console out change in state of the MediaRecorder\n   */\n  useEffect(() => {\n    console.log(`MediaRecorder state: ${mediaRecorder.state}`)\n  }, [mediaRecorder.state])\n\n  /**\n   * Start recording the stream\n   */\n  const start = async () => {\n    if (mediaRecorder.state === 'recording') return;\n    mediaRecorder.start();\n    setIsRecording(true);\n  }\n\n  /**\n   * Stop recording the stream\n   */\n  const stop = async () => {\n    if (mediaRecorder.state === 'inactive') return;\n    mediaRecorder.stop();\n    setIsRecording(false);\n    await initializeMediaRecorder();\n  }\n\n  /**\n   * Set the playback player's source to the url of the newly recorderd stream\n   * @param {string} url \n   */\n  const setPlaybackPreview = url => {\n    if (!playerRef.current) return;\n    console.log(`Playback URL: ${url}`);\n    playerRef.current.src = url;\n  }\n\n  /**\n   * Get a media device stream (webcam)\n   */\n  const getStream = () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: {\n            facingMode: 'user'\n          }\n        });\n        console.log('Stream fetched');\n        resolve(stream);\n      }\n      catch (err) {\n        console.log('Error in fetching stream')\n        reject(err);\n      }\n    })\n  }\n\n  /**\n   * Set the live stream retrieved from the media device\n   * to the designated player to preview\n   * @param {object} stream \n   */\n  const setRecordingStreamPreview = stream => {\n    if (!recorderRef.current) return;\n    recorderRef.current.srcObject = stream;\n  }\n\n  /**\n   * Create MediaRecorder object from a given stream\n   * @param {object} stream \n   */\n  const createMediaRecorder = stream => {\n    return new Promise((resolve, reject) => {\n      try {\n        const mediaRecorder = new MediaRecorder(stream);\n        console.log('New MediaRecorder created');\n        resolve(mediaRecorder);\n      }\n      catch (err) {\n        console.log('Error in creating new MediaRecorder');\n        reject(err);\n      }\n    })\n  }\n\n  /**\n   * Initialize MediaRecorder\n   */\n  const initializeMediaRecorder = async () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const stream = await getStream();\n        setRecordingStreamPreview(stream);\n        const mediaRecorder = await createMediaRecorder(stream);\n        setMediaRecorder(mediaRecorder);\n        resolve(mediaRecorder);\n      }\n      catch (err) {\n        console.log('Error in initializing MediaRecorder of fetching media devices stream')\n        reject(err);\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <h1>MediaRecorder</h1>\n      <div>\n        <button\n          onClick={isRecording ? stop : start}\n          className={isRecording ? 'recording' : ''}\n        >{isRecording ? 'Stop' : 'Start'} Recording </button>\n      </div>\n      <div>\n        <h3>MediaRecorderCapture</h3>\n        <video\n          className=\"recorder\"\n          ref={recorderRef}\n          autoPlay\n          playsInline\n          muted\n        />\n      </div>\n      <div>\n        <h3>Playback</h3>\n        <video\n          className=\"player\"\n          controls\n          ref={playerRef}\n          autoPlay\n          playsInline\n        />\n      </div>\n      <div id=\"download-link\"></div>\n    </React.Fragment>\n  )\n}\n\nexport default MediaRecorderCapture;","import React, { useEffect } from 'react';\n\n// Component\nimport MediaRecorderCapture from '../../components/MediaRecorderCapture';\n\n// Context\nimport withContextConsumer from '../../contexts/navigation/withContextConsumer';\n\nconst MediaRecorder = props => {\n\n  useEffect(() => {\n    console.log(props);\n  }, [])\n\n  return (\n    <MediaRecorderCapture />\n  )\n}\n\nexport default withContextConsumer(MediaRecorder);","import React, { useEffect, useRef } from 'react';\n\nconst CameraInput = props => {\n  const playerRef = useRef();\n\n  useEffect(() => {\n    processFileInput();\n  }, [])\n\n  const processFileInput = () => {\n    const fileInput = document.getElementById('file-input');\n    fileInput.addEventListener('change', e => {\n      playerRef.current.src = (window.webkitURL || window.URL).createObjectURL(fileInput.files[0]);\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <h1>Camera Input</h1>\n      <input type=\"file\" accept=\"video/*\" id=\"file-input\" capture=\"user\"></input>\n      <div>\n        <h3>Playback</h3>\n        <video\n          className=\"player\"\n          controls\n          ref={playerRef}\n          autoPlay\n          playsInline\n        />\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default CameraInput;","import React from 'react';\n\n// Components\nimport CameraInput from '../../components/CameraInput';\n\nconst DefaultCameraInput = props => {\n  return (\n    <CameraInput />\n  )\n}\n\nexport default DefaultCameraInput;","import React, { useEffect } from 'react';\nimport { useMediaDevices } from 'react-use';\n\n// Context\nimport withContextConsumer from '../../contexts/navigation/withContextConsumer';\n\nconst Sandbox = props => {\n  const state = useMediaDevices();\n\n  return (\n    <div className=\"wrapper content\">\n      <pre>\n        {JSON.stringify(state, null, 2)}\n      </pre>\n    </div>\n  )\n}\n\nexport default withContextConsumer(Sandbox);","import React, { useEffect, useState } from 'react';\nimport vad from 'voice-activity-detection';\nimport axios from 'axios';\n\nconst VadTimeSlicing = props => {\n  const [voiceState, setVoiceState] = useState('inactive');\n  const [voiceActivity, setVoiceActivity] = useState(0);\n  const [activityData, setActivityData] = useState([]);\n  let _activityData = [];\n  const [timeSlices, setTimeSlices] = useState([]);\n  let _timeSlices = [];\n\n  const saveJsonToFile = (filename, data = {}) => {\n    axios.post('http://localhost:3001/save', {\n      filename,\n      data,\n    })\n      .then(response => {\n        console.log(response);\n      });\n  }\n\n  useEffect(() => {\n    const player = document.querySelector('video');\n    let _vad = {};\n\n    player.onloadedmetadata = () => {\n      window.AudioContext = window.AudioContext || window.webkitAudioContext;\n      const audioContext = new AudioContext();\n      const stream = player.captureStream();\n      var options = {\n        fftSize: 1024,\n        bufferLen: 1024,\n        smoothingTimeConstant: 0.2,\n        minCaptureFreq: 85,         // in Hz\n        maxCaptureFreq: 255,        // in Hz\n        noiseCaptureDuration: 1000, // in ms\n        minNoiseLevel: 0.4,         // from 0 to 1\n        maxNoiseLevel: 0.7,         // from 0 to 1\n        avgNoiseMultiplier: 1.2,\n        onVoiceStart: function () {\n          setVoiceState('active');\n          const data = {\n            seconds: player.currentTime,\n            voiceState: 'active'\n          }\n          setTimeSlices(prev => [...prev, data]);\n          _timeSlices.push(data)\n        },\n        onVoiceStop: function () {\n          setVoiceState('inactive');\n          const data = {\n            seconds: player.currentTime,\n            voiceState: 'inactive'\n          }\n          setTimeSlices(prev => [...prev, data]);\n          _timeSlices.push(data)\n        },\n        onUpdate: function (val) {\n          setVoiceActivity(val);\n          const data = {\n            seconds: player.currentTime,\n            voiceActivity: val\n          }\n          setActivityData(prev => [...prev, data]);\n          _activityData.push(data);\n        }\n      };\n      _vad = vad(audioContext, stream, options);\n      _vad.disconnect();\n    }\n\n    player.onplay = () => {\n      console.log('video playing');\n      _vad.connect();\n    }\n\n    player.onpause = () => {\n      console.log('video paused');\n      _vad.disconnect();\n    }\n\n    player.onended = () => {\n      console.log('video ended');\n      _vad.disconnect();\n\n      console.log(_timeSlices);\n      saveJsonToFile('vad-realtime-time-slices.json', _timeSlices);\n\n      setTimeout(() => {\n        console.log(_activityData);\n        saveJsonToFile('vad-realtime-activity-data.json', _activityData);\n      }, 1000)\n    }\n\n  }, []);\n\n  const filteredSegments = () => {\n    /**\n     * start time\n     * end time\n     * current time\n     * duration\n     */\n    return timeSlices.filter(x => {\n      if (x.voiceState === 'active')\n        return x;\n    });\n  }\n\n  return (\n    <div className=\"wrapper content\">\n      <h3>VAD Time Slicing</h3>\n\n      <video controls width={480}      >\n        <source src=\"./assets/President_Obamas_best_speeches.mp4\" />\n      </video>\n\n      <div>Voice State: <strong>{voiceState}</strong></div>\n      <div>Current voice activity value: <strong>{voiceActivity}</strong></div>\n      <pre>\n        {\n          JSON.stringify(timeSlices, null, 2)\n        }\n      </pre>\n    </div>\n  )\n}\n\nexport default VadTimeSlicing;","import React, { Suspense, useContext } from 'react';\nimport { withAppInstall } from './components/AppInstall';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// Components\nimport Navigation from './components/Navigation';\n\n// Services\nimport { debug } from './services/browser';\nimport { currentPage } from './services/routerHelper';\n\n// Context\nimport { NavigationContext } from './contexts/navigation/Context';\nimport withContextProvider from './contexts/navigation/withContextProvider';\n\n// Pages\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport MediaRecorder from './pages/MediaRecorder';\nimport DefaultCameraInput from './pages/DefaultCameraInput';\nimport Sandbox from './pages/Sandbox';\nimport VadTimeSlicing from './pages/VadTimeSlicing';\n\nconst App = props => {\n  const { navigation } = useContext(NavigationContext);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <div className={`App ${currentPage(navigation.location)}`}>\n          <Navigation />\n          {debug()}\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/default-camera-input\" component={DefaultCameraInput} />\n            <Route path=\"/media-recorder-capture\" component={MediaRecorder} />\n            <Route path=\"/sandbox\" component={Sandbox} />\n            <Route path=\"/vad-time-slicing\" component={VadTimeSlicing} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default withContextProvider(withAppInstall(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}